# templates
# ------------

.deploy-template:
  image: alpine:latest
  script:
    - echo "Deploying to ${CI_ENVIRONMENT_NAME}"
  variables:
    GIT_STRATEGY: none  # prevents fetching repo (we only need the artifact here)

# -------------
# Pipeline Definition

variables:
  PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
  CONDA_PKGS_DIRS: $CI_PROJECT_DIR/.cache/conda

stages:
  - build
  - test
  - deploy-nonprod
  - deploy-prod

# Build and Test
build-wheel:
  image: python:3-slim
  stage: build
  artifacts:
    name: 'app-wheel'
    paths:
      - dist/log_queue_api-*.whl
    expire_in: 6 mos
  script:
    - python setup.py dist

test-unit:
  stage: test
  image: continuumio/miniconda3
  cache:
    key:
      files:
        - environment.yml
        - environment-dev.yml
    paths:
      - $PIP_CACHE_DIR
      - $CONDA_PKGS_DIRS/*.tar.bz2
      - $CONDA_PKGS_DIRS/urls.txt
  before_script:
    - export PATH="/opt/conda/bin:$PATH"
    - conda env create -n .venv -f environment-dev.yml environment.yml
    - source activate .venv
    - pip install dist/log_queue_api-*.whl
  script:
    - pytest tests


# Nonprod deployments

dev:
  extends: .deploy-template
  stage: deploy-nonprod
  environment:
    name: dev
  only:
    - branches

# Prod deployment

prod:
  extends: .deploy-template
  stage: deploy-prod
  environment:
    name: prod
  only:
    - master
